# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import savvy_streaming_api_pb2 as savvy__streaming__api__pb2


class SavvyStreamingAPIStub(object):
  """SavvyStreamingAPI service definition
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StreamMachine = channel.unary_stream(
        '/IdekoStreamingDal.SavvyStreamingAPI/StreamMachine',
        request_serializer=savvy__streaming__api__pb2.StreamParameters.SerializeToString,
        response_deserializer=savvy__streaming__api__pb2.StreamResponse.FromString,
        )


class SavvyStreamingAPIServicer(object):
  """SavvyStreamingAPI service definition
  """

  def StreamMachine(self, request, context):
    """Opens a stream request with the parameters specified and returns a stream response
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SavvyStreamingAPIServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StreamMachine': grpc.unary_stream_rpc_method_handler(
          servicer.StreamMachine,
          request_deserializer=savvy__streaming__api__pb2.StreamParameters.FromString,
          response_serializer=savvy__streaming__api__pb2.StreamResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'IdekoStreamingDal.SavvyStreamingAPI', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
